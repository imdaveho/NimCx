
cx.nim  overview  generated with quickInfo cx.nim
________________________________________________________________________________________________________________________________________
import os,osproc,macros,posix,terminal,math,stats,unicode,times,tables,json,sets
_______________________________________________________________________________________________________________________________________________
import sequtils,parseutils,strutils,httpclient,rawsockets,browsers,intsets, algorithm
_______________________________________________________________________________________________________________________________________________
import random,strfmt
_______________________________________________________________________________________________________________________________________________
proc getfg(fg:ForegroundColor):string
_______________________________________________________________________________________________________________________________________________
proc getbg(bg:BackgroundColor):string
_______________________________________________________________________________________________________________________________________________
proc fbright(fg:ForegroundColor): string
_______________________________________________________________________________________________________________________________________________
proc bbright(bg:BackgroundColor): string
_______________________________________________________________________________________________________________________________________________
template randCol*: string = colorNames[rxCol.randomChoice()][1]
_______________________________________________________________________________________________________________________________________________
converter toTwInt(x: cushort): int = result = int(x)
_______________________________________________________________________________________________________________________________________________
proc getTerminalWidth*() : int
_______________________________________________________________________________________________________________________________________________
proc ioctl(fd: cint, request: culong, argp: pointer)
_______________________________________________________________________________________________________________________________________________
template tw* : int = getTerminalwidth() ## latest terminalwidth always available in tw
_______________________________________________________________________________________________________________________________________________
proc getTerminalHeight*() : int
_______________________________________________________________________________________________________________________________________________
proc ioctl(fd: cint, request: culong, argp: pointer)
_______________________________________________________________________________________________________________________________________________
template th* : int = getTerminalheight() ## latest terminalheight always available in th
_______________________________________________________________________________________________________________________________________________
converter colconv*(cx:string) : string
_______________________________________________________________________________________________________________________________________________
proc rainbow*[T](s : T,xpos:int = 0,fitLine:bool = false ,centered:bool = false)  ## forward declaration
_______________________________________________________________________________________________________________________________________________
proc print*[T](astring:T,fgr:string = termwhite , bgr:string = bblack,xpos:int = 0,fitLine:bool = false,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc printBiCol*[T](s:T,sep:string = ":",colLeft:string = yellowgreen ,colRight:string = termwhite,xpos:int = 0,centered:bool = false) ## forward declaration                                                                                                                                 
_______________________________________________________________________________________________________________________________________________
proc printLnBiCol*[T](s:T,sep:string = ":",colLeft:string = yellowgreen ,colRight:string = termwhite,xpos:int = 0,centered:bool = false) ## forward declaration                                                                                                                               
_______________________________________________________________________________________________________________________________________________
proc printStyledsimple*[T](ss:T,fg:string,astyle:set[Style]) ## forward declaration
_______________________________________________________________________________________________________________________________________________
proc printStyled*[T](ss:T,substr:string,col:string,astyle : set[Style]) ## forward declaration
_______________________________________________________________________________________________________________________________________________
proc hline*(n:int = tw,col:string = white) ## forward declaration
_______________________________________________________________________________________________________________________________________________
proc hlineLn*(n:int = tw,col:string = white) ## forward declaration
_______________________________________________________________________________________________________________________________________________
proc styledEchoProcessArg(s: string) = write stdout, s
_______________________________________________________________________________________________________________________________________________
proc styledEchoProcessArg(style: Style) = setStyle({style})
_______________________________________________________________________________________________________________________________________________
proc styledEchoProcessArg(style: set[Style]) = setStyle style
_______________________________________________________________________________________________________________________________________________
proc styledEchoProcessArg(color: ForegroundColor) = setForegroundColor color
_______________________________________________________________________________________________________________________________________________
proc styledEchoProcessArg(color: BackgroundColor) = setBackgroundColor color
_______________________________________________________________________________________________________________________________________________
template randPastelCol*: string = pastelSet[rxPastelCol.randomChoice()][1]
_______________________________________________________________________________________________________________________________________________
template msgg*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msggb*(code: stmt): stmt  
_______________________________________________________________________________________________________________________________________________
template msgy*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgyb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgr*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgrb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgc*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgcb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgw*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgwb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgbb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgbl*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgblb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgm*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template msgmb*(code: stmt): stmt
_______________________________________________________________________________________________________________________________________________
template hdx*(code:stmt,frm:string = "+",width:int = tw,xpos:int = 0):stmt
_______________________________________________________________________________________________________________________________________________
template withFile*(f: expr, filename: string, mode: FileMode, body: stmt): stmt {.immediate.}
_______________________________________________________________________________________________________________________________________________
proc showRune*(s:string) : string 
_______________________________________________________________________________________________________________________________________________
proc unquote*(s:string):string
_______________________________________________________________________________________________________________________________________________
proc cleanScreen*()
_______________________________________________________________________________________________________________________________________________
proc centerX*() : int = tw div 2
_______________________________________________________________________________________________________________________________________________
proc centerPos*(astring:string)
_______________________________________________________________________________________________________________________________________________
proc checkColor*(colname: string): bool
_______________________________________________________________________________________________________________________________________________
converter colconv*(cx:string) : string
_______________________________________________________________________________________________________________________________________________
proc print*[T](astring:T,fgr:string = termwhite ,bgr:string = bblack ,xpos:int = 0,fitLine:bool = false ,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc printLn*[T](astring:T,fgr:string = termwhite , bgr:string = bblack,xpos:int = 0,fitLine:bool = false,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc rainbow*[T](s : T,xpos:int = 0,fitLine:bool = false,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc hline*(n:int = tw,col:string = white)
_______________________________________________________________________________________________________________________________________________
proc hlineLn*(n:int = tw,col:string = white)
_______________________________________________________________________________________________________________________________________________
proc dline*(n:int = tw,lt:string = "-",col:string = termwhite)
_______________________________________________________________________________________________________________________________________________
proc dlineLn*(n:int = tw,lt:string = "-",col:string = termwhite)
_______________________________________________________________________________________________________________________________________________
proc decho*(z:int = 1) 
_______________________________________________________________________________________________________________________________________________
template curUp*(x:int = 1)
_______________________________________________________________________________________________________________________________________________
template curDn*(x:int = 1)
_______________________________________________________________________________________________________________________________________________
template curBk*(x:int = 1)
_______________________________________________________________________________________________________________________________________________
template curFw*(x:int = 1)
_______________________________________________________________________________________________________________________________________________
template curSetx*(x:int)
_______________________________________________________________________________________________________________________________________________
template curSet*(x:int = 0,y:int = 0)
_______________________________________________________________________________________________________________________________________________
template clearup*(x:int = 80)
_______________________________________________________________________________________________________________________________________________
proc curMove*(up:int=0,dn:int=0,fw:int=0,bk:int=0)
_______________________________________________________________________________________________________________________________________________
proc sleepy*[T:float|int](secs:T)
_______________________________________________________________________________________________________________________________________________
proc printRainbow*[T](s : T,astyle:set[Style])
_______________________________________________________________________________________________________________________________________________
proc printLnRainbow*[T](s : T,astyle:set[Style])
_______________________________________________________________________________________________________________________________________________
proc printBiCol*[T](s:T,sep:string = ":",colLeft:string = yellowgreen ,colRight:string = termwhite,xpos:int = 0,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc printLnBiCol*[T](s:T,sep:string = ":", colLeft:string = yellowgreen, colRight:string = termwhite,xpos:int = 0,centered:bool = false)
_______________________________________________________________________________________________________________________________________________
proc printHl*(s:string,substr:string,col:string = termwhite)
_______________________________________________________________________________________________________________________________________________
proc printLnHl*(s:string,substr:string,col:string = termwhite)
_______________________________________________________________________________________________________________________________________________
proc printStyledSimple*[T](ss:T,fg:string,astyle:set[Style])
_______________________________________________________________________________________________________________________________________________
proc printStyled*[T](ss:T,substr:string,col:string,astyle : set[Style] ) 
_______________________________________________________________________________________________________________________________________________
proc printLnStyled*[T](ss:T,substr:string,col:string,astyle : set[Style] )
_______________________________________________________________________________________________________________________________________________
proc cecho*(col:string,ggg: varargs[string, `$`] = @[""] ) 
_______________________________________________________________________________________________________________________________________________
proc cechoLn*(col:string,ggg: varargs[string, `$`] = @[""] ) 
_______________________________________________________________________________________________________________________________________________
proc showColors*()
_______________________________________________________________________________________________________________________________________________
proc doty*(d:int,fgr:string = white, bgr:string = black,xpos:int = 1)
_______________________________________________________________________________________________________________________________________________
proc dotyLn*(d:int,fgr:string = white, bgr:string = black,xpos:int = 1)
_______________________________________________________________________________________________________________________________________________
proc printDotPos*(xpos:int,dotCol:string,blink:bool)
_______________________________________________________________________________________________________________________________________________
proc drawRect*(h:int = 0 ,w:int = 3, frhLine:string = "_", frVLine:string = "|",frCol:string = darkgreen,dotCol = truetomato,xpos:int = 1,blink:bool = false)                                                                                                                                 
_______________________________________________________________________________________________________________________________________________
proc validdate*(adate:string):bool
_______________________________________________________________________________________________________________________________________________
proc day*(aDate:string) : string
_______________________________________________________________________________________________________________________________________________
proc month*(aDate:string) : string
_______________________________________________________________________________________________________________________________________________
proc year*(aDate:string) : string = aDate.split("-")[0]
_______________________________________________________________________________________________________________________________________________
proc intervalsecs*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervalmins*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervalhours*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervaldays*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervalweeks*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervalmonths*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc intervalyears*(startDate,endDate:string) : float
_______________________________________________________________________________________________________________________________________________
proc compareDates*(startDate,endDate:string) : int
_______________________________________________________________________________________________________________________________________________
proc dayOfWeekJulianA*(day, month, year: int): WeekDay
_______________________________________________________________________________________________________________________________________________
proc dayOfWeekJulian*(datestr:string): string
_______________________________________________________________________________________________________________________________________________
proc fx(nx:TimeInfo):string
_______________________________________________________________________________________________________________________________________________
proc plusDays*(aDate:string,days:int):string
_______________________________________________________________________________________________________________________________________________
proc minusDays*(aDate:string,days:int):string
_______________________________________________________________________________________________________________________________________________
proc getFirstMondayYear*(ayear:string):string
_______________________________________________________________________________________________________________________________________________
proc getFirstMondayYearMonth*(aym:string):string
_______________________________________________________________________________________________________________________________________________
proc getNextMonday*(adate:string):string
_______________________________________________________________________________________________________________________________________________
proc printBigNumber*(xnumber:string|int,fgr:string = yellowgreen ,bgr:string = black,xpos:int = 1,fun:bool = false)
_______________________________________________________________________________________________________________________________________________
proc printBigLetters*(aword:string,fgr:string = yellowgreen ,bgr:string = black,xpos:int = 1,k:int = 7,fun:bool = false)
_______________________________________________________________________________________________________________________________________________
template abc(s:stmt,xpos:int)
_______________________________________________________________________________________________________________________________________________
proc printNimSxR*(nimsx:seq[string],col:string = yellowgreen, xpos: int = 1)
_______________________________________________________________________________________________________________________________________________
proc printSlimNumber*(anumber:string,fgr:string = yellowgreen ,bgr:string = black,xpos:int = 1)
_______________________________________________________________________________________________________________________________________________
proc slimN(x:int):Tsn7
_______________________________________________________________________________________________________________________________________________
proc slimC(x:string):Tsn7
_______________________________________________________________________________________________________________________________________________
proc prsn(x:int,fgr:string = termwhite,bgr:string = termblack,xpos:int = 0)
_______________________________________________________________________________________________________________________________________________
proc prsc(x:string,fgr:string = termwhite,bgr:string = termblack,xpos:int = 0)
_______________________________________________________________________________________________________________________________________________
proc printSlim* (ss:string = "", frg:string = termwhite,bgr:string = termblack,xpos:int = 0,align:string = "left")
_______________________________________________________________________________________________________________________________________________
proc superHeader*(bstring:string)
_______________________________________________________________________________________________________________________________________________
proc superHeader*(bstring:string,strcol:string,frmcol:string)
_______________________________________________________________________________________________________________________________________________
proc frameline(pdl:string)
_______________________________________________________________________________________________________________________________________________
proc framemarker(am:string)
_______________________________________________________________________________________________________________________________________________
proc headermessage(astring:string) 
_______________________________________________________________________________________________________________________________________________
proc superHeaderA*(bb:string = "",strcol:string = white,frmcol:string = green,anim:bool = true,animcount:int = 1)
_______________________________________________________________________________________________________________________________________________
proc getWanIp*():string
_______________________________________________________________________________________________________________________________________________
proc showWanIp*()
_______________________________________________________________________________________________________________________________________________
proc getIpInfo*(ip:string):JsonNode
_______________________________________________________________________________________________________________________________________________
proc showIpInfo*(ip:string)
_______________________________________________________________________________________________________________________________________________
proc getHosts*(dm:string):seq[string]
_______________________________________________________________________________________________________________________________________________
proc showHosts*(dm:string)
_______________________________________________________________________________________________________________________________________________
proc getRandomInt*(mi:int = 0,ma:int = int.high):int {.inline.
_______________________________________________________________________________________________________________________________________________
proc createSeqInt*(n:int = 10,mi:int = 0,ma:int = int.high) : seq[int] {.inline.}
_______________________________________________________________________________________________________________________________________________
proc sum*[T](aseq: seq[T]): T = foldl(aseq, a + b)
_______________________________________________________________________________________________________________________________________________
proc ff*(zz:float,n:int64 = 5):string
_______________________________________________________________________________________________________________________________________________
proc getRandomFloat*():float
_______________________________________________________________________________________________________________________________________________
proc createSeqFloat*(n:BiggestInt = 10,prec:int = 3) : seq[float]
_______________________________________________________________________________________________________________________________________________
proc getRandomPointInCircle*(radius:float) : seq[float]
_______________________________________________________________________________________________________________________________________________
proc sortMe*[T](xs:var seq[T],order = Ascending): seq[T]
_______________________________________________________________________________________________________________________________________________
proc reverseMe*[T](xs: openarray[T]): seq[T]
_______________________________________________________________________________________________________________________________________________
template getCard* :auto
_______________________________________________________________________________________________________________________________________________
proc ruler* (xpos:int=0,xposE:int=0,ypos:int = 0,fgr:string = termwhite,bgr:string = termblack , vert:bool = false)
_______________________________________________________________________________________________________________________________________________
proc centerMark*(showpos :bool = false)
_______________________________________________________________________________________________________________________________________________
proc tupleToStr*(xs: tuple): string
_______________________________________________________________________________________________________________________________________________
template loopy*[T](ite:T,st:stmt)
_______________________________________________________________________________________________________________________________________________
proc shift*[T](x: var seq[T], zz: Natural = 0): T
_______________________________________________________________________________________________________________________________________________
proc showStats*(x:Runningstat)
_______________________________________________________________________________________________________________________________________________
proc newDir*(dirname:string)
_______________________________________________________________________________________________________________________________________________
proc remDir*(dirname:string)
_______________________________________________________________________________________________________________________________________________
proc dayOfYear*() : range[0..365] = getLocalTime(getTime()).yearday + 1
_______________________________________________________________________________________________________________________________________________
proc dayOfYear*(tt:Time) : range[0..365] = getLocalTime(tt).yearday + 1
_______________________________________________________________________________________________________________________________________________
proc newWordCJK*(minwl:int = 3 ,maxwl:int = 10):string
_______________________________________________________________________________________________________________________________________________
proc newWord*(minwl:int=3,maxwl:int = 10 ):string
_______________________________________________________________________________________________________________________________________________
proc newWord2*(minwl:int=3,maxwl:int = 10 ):string
_______________________________________________________________________________________________________________________________________________
proc newWord3*(minwl:int=3,maxwl:int = 10 ,nflag:bool = true):string
_______________________________________________________________________________________________________________________________________________
proc newHiragana*(minwl:int=3,maxwl:int = 10 ):string
_______________________________________________________________________________________________________________________________________________
proc newKatakana*(minwl:int=3,maxwl:int = 10 ):string
_______________________________________________________________________________________________________________________________________________
proc iching*():seq[string]
_______________________________________________________________________________________________________________________________________________
proc ada*():seq[string]
_______________________________________________________________________________________________________________________________________________
proc hiragana*():seq[string]
_______________________________________________________________________________________________________________________________________________
proc katakana*():seq[string]
_______________________________________________________________________________________________________________________________________________
proc rainbow2*[T](s : T,xpos:int = 0,fitLine:bool = false,centered:bool = false, colorset:seq[(string, string)] = colorNames)
_______________________________________________________________________________________________________________________________________________
proc boxChars*():seq[string]
_______________________________________________________________________________________________________________________________________________
proc drawBox*(hy:int = 1, wx:int = 1 , hsec:int = 1 ,vsec:int = 1,frCol:string = yellowgreen,brCol:string = black ,cornerCol:string = truetomato,xpos:int = 1,blink:bool = false)                                                                                                             
_______________________________________________________________________________________________________________________________________________
proc randpos*():int
_______________________________________________________________________________________________________________________________________________
proc fastsplit*(s: string, sep: char): seq[string]
_______________________________________________________________________________________________________________________________________________
proc splitty*(txt:string,sep:string):seq[string]
_______________________________________________________________________________________________________________________________________________
proc showTerminalSize*()
_______________________________________________________________________________________________________________________________________________
proc qqTop*()
_______________________________________________________________________________________________________________________________________________
proc doInfo*()
_______________________________________________________________________________________________________________________________________________
proc infoLine*()
_______________________________________________________________________________________________________________________________________________
proc doFinish*()
_______________________________________________________________________________________________________________________________________________
proc handler*() {.noconv.}
