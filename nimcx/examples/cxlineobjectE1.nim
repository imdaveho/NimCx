import nimcx

# example for the Cxline object 
# and usage of truecolor procs

# truecolor handling is easy for your foregroundcolor needs just use these
# a random truecolor   : rndTrueCol()
# a specific color     : cxTrueCol(12345)    

# cxTrueCol with default setting holds 0 .. 421875 color numbers
# even color numbers  are suitable for standard foregroundcolor use
# if your terminal allows that is.

# so you can use this like so:
# echo(cxTrueCol[132688] & "SUPER")
# printLn("SUPER",cxTrueCol[132688],bgRed,xpos=10)

# Horizontal line test
var theline = newcxline()
loopy2(1,th - 5):
    theLine.linetype = cxHorizontal
    theline.startpos = 5 
    theline.endpos = theline.startpos + 30
    theline.linecolor = rndTrueCol()
    let lcol = colorNumber38   # we want to save the linecolor generated by rndTrueCol() this conveniently  stored in colornumber38 
    theline.textbracketcolor = rndTrueCol()
    theline.dotleftcolor     = rndTrueCol()
    theline.dotrightcolor    = rndTrueCol()
    theline.textpos = 8
    theline.text = fmtx([">8","","<9"] ,$xloopy," ",newword(5,8))
    theline.textcolor = cxTrueCol[lcol]
    theline.textstyle = {styleReverse}
    theline.newline = ""  
    printcxline(theline)
    print(spaces(3))
    print(fmtx([">20"],"cxTruecolor : ") & fmtx([">10"],ff2(lcol)) & spaces(5),cxTrueCol[lcol],bgBlack,styled={styleReverse}) 
    # we use our line object again but change the start pos
    var theline2 = theline
    theline2.startpos = 83
    theline2.endpos = theline.startpos + 30
    theline2.linecolor = rndTrueCol()
    let lcol2 = colorNumber38 
    theline2.textcolor = cxTrueCol[lcol2]
    printcxline(theline2)
    print(spaces(3))
    print(fmtx([">20"],"cxTruecolor : ") & fmtx([">10"],ff2(lcol2)) & spaces(5),cxTrueCol[lcol2],bgBlack,styled={styleReverse}) 
    echo()
echo()
printLnBiCol("Palette length : " & ff2(cxTruecol.len),xpos = 10)
decho(3)

theline = newcxline()
loopy2(1,th - 8):
 theline.startpos = -13
 var x = 16
 for n in 0..<11:
    theLine.linetype = cxHorizontal
    theline.startpos = theline.startpos - 6  
    if n == 4:
      theline.endpos = theline.startpos - 8
    else:  
      theline.endpos = theline.startpos 
    theline.linecolor = rndTrueCol()
    let lcol = colorNumber38   # we want to save the linecolor generated by rndTrueCol() this conveniently  stored in colornumber38 
    theline.textbracketcolor = rndTrueCol()
    theline.dotleftcolor     = rndTrueCol()
    theline.dotrightcolor    = rndTrueCol()
    theline.textpos = 4
    theline.text = fmtx([">4","","<3","","<3"] ,$(xloopy * (n + 1))," ",newhiragana(1,2)," ",newkatakana(1,2))
    theline.textcolor = cxTrueCol[lcol]
    theline.textstyle = {styleReverse}
    theline.showbrackets = true
    theline.newline = ""  
    printcxline(theline)
    print(spaces(1))
 decho(1)











# Verizontal line test  not ok yet in cx.nim
# theline = newcxline()
# loopy2(1,100):
#     theLine.linetype = cxVertical
#     theline.startpos = 10 
#     theline.endpos   = 80
#     theline.linecolor = rndTrueCol()
#     let lcol = colorNumber38   # we want to save the linecolor generated by rndTrueCol() this conveniently  stored in colornumber38 
#     theline.textbracketcolor = rndTrueCol()
#     theline.dotleftcolor     = rndTrueCol()
#     theline.dotrightcolor    = rndTrueCol()
#     theline.textpos = 8
#     theline.text = fmtx([">8","","<12"] ,$xloopy," ",newword(5,10))
#     theline.textcolor = cxTrueCol[lcol]
#     theline.textstyle = {styleReverse}
#     theline.newline = ""                  
#     printcxline(theline)
#     printLn("  cxTruecolor : " & fmtx([">10"],ff2(lcol)),cxTrueCol[lcol],bgBlack,styled={styleReverse}) 
# echo()
# printLnBiCol("Palette length : " & ff2(cxTruecol.len),xpos = 10)
# 



doFinish()
