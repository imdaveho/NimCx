import nimcx


# this works best in a konsole terminal due to use
# of truecolors which are beyond of the usual gnome based terminals

# examples for the Cxline object  defined in cxglobal.nim 
# diplayed via printcxline() in cxprint.nim
# and usage of truecolor procs

# truecolor handling is easy for your foregroundcolor needs just use these
# a random truecolor   : rndTrueCol()
# a specific color     : cxTrueCol(12345)    

# cxTrueCol with default setting holds 0 .. 421875 color numbers
# even color numbers  are suitable for standard foregroundcolor use
# if your terminal allows that is.

# so you can use this like so:
# echo(cxTrueCol[132688] & "SUPER")
# printLn("SUPER",cxTrueCol[132688],bgRed,xpos=10)

# Horizontal line test
var theline = newcxline()
loopy2(1,th - 5):
    theLine.linetype = cxHorizontal
    theline.startpos = 5 
    theline.endpos = theline.startpos + 30
    theline.linecolor = rndTrueCol()
    let lcol = colorNumber38   # we want to save the linecolor generated by rndTrueCol() this conveniently  stored in colornumber38 
    theline.cxlinetext.textbracketcolor = rndTrueCol()
    theline.dotleftcolor     = rndTrueCol()
    theline.dotrightcolor    = rndTrueCol()
    theline.cxlinetext.textpos = 8
    theline.cxlinetext.text = fmtx([">8","","<9"] ,$xloopy," ",newword(5,8))
    theline.cxlinetext.textcolor = cxTrueCol[lcol]
    theline.cxlinetext.textstyle = {styleReverse}
    theline.newline = ""  
    printcxline(theline)
    print(spaces(3))
    print(fmtx([">20"],"cxTruecolor : ") & fmtx([">10"],ff2(lcol)) & spaces(5),cxTrueCol[lcol],bgBlack,styled={styleReverse}) 
    # we use our line object again but change the start pos
    var theline2 = theline
    theline2.startpos = 83
    theline2.endpos = theline.startpos + 30
    theline2.linecolor = rndTrueCol()
    let lcol2 = colorNumber38 
    theline2.cxlinetext.textcolor = cxTrueCol[lcol2]
    printcxline(theline2)
    print(spaces(3))
    print(fmtx([">20"],"cxTruecolor : ") & fmtx([">10"],ff2(lcol2)) & spaces(5),cxTrueCol[lcol2],bgBlack,styled={styleReverse}) 
    echo()
echo()
printLnBiCol("Palette length : " & ff2(cxTruecol.len),xpos = 10)
decho(3)


# example fun with random japanese chars if you have them installed
theline = newcxline()
loopy2(1,th - 8):
 theline.startpos = -13
 var x = 16
 for n in 0..<11:
    theLine.linetype = cxHorizontal
    theline.startpos = theline.startpos - 6  
    if n == 4:
      theline.endpos = theline.startpos - 8
    else:  
      theline.endpos = theline.startpos 
    theline.linecolor = rndTrueCol()
    let lcol = colorNumber38   # we want to save the linecolor generated by rndTrueCol() this conveniently  stored in colornumber38 
    theline.cxlinetext.textbracketcolor = rndTrueCol()
    theline.dotleftcolor     = rndTrueCol()
    theline.dotrightcolor    = rndTrueCol()
    theline.cxlinetext.textpos = 4
    theline.cxlinetext.text = fmtx([">4","","<3","","<3"] ,$(xloopy * (n + 1))," ",newhiragana(1,2)," ",newkatakana(1,2))
    theline.cxlinetext.textcolor = cxTrueCol[lcol]
    theline.cxlinetext.textstyle = {styleReverse}
    theline.showbrackets = true
    theline.newline = ""  
    printcxline(theline)
    print(spaces(1))   
 decho(1)
 
decho(3) 


# test how to put several of cxlinetext objects onto a cxline  , up to 12 are allowed 
var anow = now()
var nowlen = $($anow).len
var bframeline = newcxline()
bframeline.startpos = 3
bframeline.endpos = 100
bframeline.linecolor        = cxTrueCol[383978]
bframeline.cxlinetext.textbracketcolor = lime
bframeline.dotleftcolor     = cxTrueCol[163978]
bframeline.dotrightcolor    = cxTrueCol[163978]

bframeline.cxlinetext.textpos = 3
bframeline.cxlinetext.text = fmtx([">" & nowlen],anow)
bframeline.cxlinetext.textcolor = rndcol() #cxTrueCol[326084]
bframeline.cxlinetext.textstyle = {styleReverse}

bframeline.cxlinetext2.textpos = 39 - bframeline.startpos   # < gives the actual pos on the line
bframeline.cxlinetext2.text = $getrndint(1,100)
bframeline.cxlinetext2.textcolor = skyblue #cxTrueCol[326084]
bframeline.cxlinetext2.textstyle = {styleReverse}
# 
bframeline.cxlinetext3.textpos = 50 - bframeline.startpos   # < gives the actual pos on the line
bframeline.cxlinetext3.text = ff2(getrndfloat() * 1000.00,5)
bframeline.cxlinetext3.textcolor = rndcol() #cxTrueCol[326084]
bframeline.cxlinetext3.textstyle = {styleReverse}
# 
bframeline.cxlinetext4.textpos = 70 - bframeline.startpos   # < gives the actual pos on the line
bframeline.cxlinetext4.text = newword(6,6)
bframeline.cxlinetext4.textcolor = rndcol() #cxTrueCol[326084]
bframeline.cxlinetext4.textstyle = {styleReverse}
#
bframeline.cxlinetext5.textpos = 80 - bframeline.startpos   # < gives the actual pos on the line
bframeline.cxlinetext5.text = newwordCJK(6,6)
bframeline.cxlinetext5.textcolor = rndcol() #cxTrueCol[326084]
bframeline.cxlinetext5.textstyle = {styleReverse}


bframeline.newline = ""
# 
for x in 0..101:
   #cleanscreen()
   printcxline(bframeline)
   sleepy(0.05)
   bframeline.startpos = 3
   bframeline.endpos = 10
   anow = now()
   bframeline.cxlinetext.text = $anow
   bframeline.cxlinetext2.text = $x
   bframeline.cxlinetext3.text = ff2(getrndfloat() * 1000.00,5)
   bframeline.cxlinetext4.text = newword(6,6)   #getrndint(10,15))
   bframeline.cxlinetext5.text = newwordCJK(6,6)
   #curup()
   
#showruler()
bframeline.startpos = 1
bframeline.endpos = 103
printcxline(bframeline)
echo()
doFinish()

